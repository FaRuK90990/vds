#include "stdafx.h"
#include "private/cert_control_p.h"
#include "cert_control.h"

char vds::cert_control::root_certificate_[1821] =
"MIIFTzCCAzegAwIBAgIBATANBgkqhkiG9w0BAQsFADA6MQswCQYDVQQGEwJSVTEQMA4GA1UECgwHSVZ5"
"U29mdDEZMBcGA1UEAwwQdmFkaW1AaXYtc29mdC5ydTAeFw0xOTA0MTYxNjQ5MjNaFw0yMDA0MTUxNjQ5"
"MjNaMDoxCzAJBgNVBAYTAlJVMRAwDgYDVQQKDAdJVnlTb2Z0MRkwFwYDVQQDDBB2YWRpbUBpdi1zb2Z0"
"LnJ1MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA7eXmN1Cu7qOISrd5Ty8i6x95mpZ26mht"
"9kciXMQjPCuKOpLOPBaXmHp42ESnboLfV5YnpSF7LmvY5d6nL7AJmzB3BSGYCLUZoJtAgeJ5i+QJuwU5"
"/LoRHdgyVx8j2e7D68tuZtAjDruXx/MoiwMQ6vdrlh2q7kjP1bAWFegPe/L7OWPdpnWkarS+h36cisTX"
"xAOe/V9uM33Mc+LfPEGK94gdojbW6UgdtQMm7pgBRZXFfiCOZtEzx+umFffygi3G8Snb7kMf3SZsr7p1"
"ci02Tq38j4eIjJlWiPK5HEYxzyARyAUP0+Zz3kV/4Ap0JgP2XkP0X+CegSbKoYth6ZtXAze3NL7R+Jlv"
"9lF0/XQ8lYPuSErffvSraHRO4MTyHuI6VSGXygmqIuTTnFS+mY9sE79R61/cWSbFQYWenwRLgu8HvV1d"
"TVDkK0XTZ4oi2IZVrconA3XoDRxlE8GV7gKxhQ/dNwySB+jDXrCZaiwl2oOodbU3yjAUu6pyZ78f8ezn"
"nCBvn1e5JglrTBM9nMQPTBO4f23XLK+XKp5N7bmhrjDLzvsIgqZz3uTX7R5Zh/ekDNBNe66YJylfYiFQ"
"lmCKHa09A5KAGMoW0vLjKAt1/NDkzfN6UaI/X27fuDKGs/xgN3duFAFhVPrXKMp4m1rHHVy7uxJ4PGQK"
"BvBMn4rNC3UCAwEAAaNgMF4wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwEQYJYIZIAYb4"
"QgEBBAQDAgIEMCgGCWCGSAGG+EIBDQQbFhlleGFtcGxlIGNvbW1lbnQgZXh0ZW5zaW9uMA0GCSqGSIb3"
"DQEBCwUAA4ICAQDXMsM2jUV/bQJdUAC9d08ltLiBZ3HXJvyB6sRXe1QvnAtG6/RKKupiWGqpojmbSm3G"
"IeMngAFAsjy2xT06bFDNzp5zRiEQw9GhiB528KSnWfRNHH0HDYvjRWq6aWRHG0Pypw5sOMS4YuP5ox+h"
"xiK9Gz3gN2k4B6azgeZwOFNUtlFp/cpRQRa6jB+NmMGY0lttTmfw/5Cfiov+pHmtkjeAl81mv2qWhhdJ"
"cElcetsUMar7FBRK+i5eHZ0Ndu05v7tzO0Qis8EIQUkvYzqZlsJmt4GcsMWm66UOqc283MQFsf4si9kX"
"JuXiQVxuKFshfDFYK+MFe0vC3BS/ZS4zakFYG+eEcJyDF9rtlqnU88UGuHd64iEP8Irvf5XDJz6LyoWL"
"LBehxUf8lcVUbh7YWc2q8rAXmWqUVsFV8fMv14yzHTEwN/N9AggkUTsFMgU5S7j/Ey+2ArVvmVigCcPM"
"B23mSaejw+HMri7wx8Rlf0QraumVaSdTF28Ly5JsiUDRl9yLtI4XMKbwB+kuJdJFNH8pRc8X3ZDFHTaL"
"SIJo5bjQEKY1rdsAKYrOBHjTszZgXOlpx6BJ2Es0DYHF5IbPYXFTUvxBH0OkBVMyMqvzOZIeOYMGzSTE"
"GJ4YzxL+GIdCKVjQOHeoVsy4rTLafRJzAkUsgWrRNOqhR66Ey3Qwn4md5g==";
char vds::cert_control::common_news_channel_id_[65] =
"tKvw76WxciSfqV7nd4N+EVFd7vrWkSpS8GkeXwc1iLk=";
char vds::cert_control::common_news_read_certificate_[1821] =
"MIIFTzCCAzegAwIBAgIBATANBgkqhkiG9w0BAQsFADA6MQswCQYDVQQGEwJSVTEQMA4GA1UECgwHSVZ5"
"U29mdDEZMBcGA1UEAwwQdmFkaW1AaXYtc29mdC5ydTAeFw0xOTA0MTYxNjQ5MjVaFw0yMDA0MTUxNjQ5"
"MjVaMDoxCzAJBgNVBAYTAlJVMRAwDgYDVQQKDAdJVnlTb2Z0MRkwFwYDVQQDDBBDb21tb24gTmV3cyBS"
"ZWFkMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAl+sh+W6ERMYJyH3JpblU5pv88ExAO6xl"
"Qq/VbyUYQvl3OOgVnp9NqDWQbH7BmqtZx/47YM3uXtgB6QpHVD/eP/4dEpomZAX046nqyxb4qazXYsfE"
"+eHN0c4w3alzGVJP7InzuKC1DBkkII0JzszEcD/vDvmgPkyw+Eo+gu0tEm66FMR67h3v54ky1z64eCyZ"
"Zy/aD3sv++2d0pfidx9BdRHBzFosejwcxHXMF9HngSEFBMR49+gCb0vcb7ke5OrbgF3PQ1mXPOmQjRsk"
"lVY2xPxmKmxOanxblGK1MoiIvXnC2MJQjCt1Vh80u+efFt/BYj0ErFFtlmodHmIuJ3nYc5Mtx0Q07JZC"
"mt6g+CcdegaKwg5mQS1t5dCqTGDeD8RsegLlOEXxfxTApk24D/6D0ffzkP279kOk/Z8JbLyfPAPzNScb"
"96JmAIr8UaRI1x2+QnD0hsvNoxcOySkuFDmAZLwDjzQMfDdDf6l6rH1GFeryCJzwOFmzJ9RjGLt0iWV2"
"q46mhLrP1Scubguz1m2EL3t6N71CWwj9KE/Bw4ZpTvk1H3MWpjJuXC/n3suUscyLacNJv4cfOwPN2V3E"
"w91oKtqGJVxlzYcwHtjdzQ7kzCh9skXo29qbDjhySi1+UFrpB+HKcocuQpgx1d5a20kKiwZeSpAvodYI"
"jplG4wo2WykCAwEAAaNgMF4wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwEQYJYIZIAYb4"
"QgEBBAQDAgIEMCgGCWCGSAGG+EIBDQQbFhlleGFtcGxlIGNvbW1lbnQgZXh0ZW5zaW9uMA0GCSqGSIb3"
"DQEBCwUAA4ICAQDYhcpSykNW8p13VMEIwHal0BeJGBRwFcuPHaq3gr8vjVAzMWCbN7uACrR+ad/GTvzg"
"0ywghNgeZ+dle5CCeKTFp5eKhFC1ngIAZ+Gah/beyJswYekV3NWtcpG/IomW6uhbicsQyGkdfj1H4yAv"
"a4IHDdrWsODO5fOKc5r+QEV/EzyPcEfkELP+l0lfw4y9CJTdZQRIqaAwex6mxq4kfULAfO4r8iCyXoHG"
"12Onrg/aCFz24AreVXgzlPfZa/vrYQFSsIX0dsqPdj4r7NqqRcb8lRTSAnKGh5l2D1uR0iIsZXphyMir"
"LbsWvOE5DEgHym2/YapouuSBvwwOX+fjP6yq8eflFVp+oaPq3CVzHq6aq6Y0qMcEQs0kdKE9dQJBKUma"
"4n3iXCQ8gIqFq3p1rC01yOzLcrIyei0kXJZiKVIljfeb1SfMu/aIF36vxkfB1weqhlGzZjTF+l6wdL7t"
"v9d/4DAiVBZoWl74fYQTNCTNe28ddW0YonvXmZ8QY3vfjuyxQu8PH9PRgfnu1N8TyI6LHRk6T38iQZYH"
"XaV6eVYc9YZUyQaQFE9W0ebpKvTVScIEoPSffL/GN1kOAn30gS8C+TWwtc88U3toRHzwPa8DJYI+8D2T"
"LpwbSbVv8pncXu/F7SL5AYYouYc3u3mMKbeCwXTTK+lE6PXWXtg8/wUeuQ==";
char vds::cert_control::common_news_read_private_key_[3137] =
"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"
"G0j2FBFLNA==";
char vds::cert_control::common_news_write_certificate_[1821] =
"MIIFUDCCAzigAwIBAgIBATANBgkqhkiG9w0BAQsFADA6MQswCQYDVQQGEwJSVTEQMA4GA1UECgwHSVZ5"
"U29mdDEZMBcGA1UEAwwQdmFkaW1AaXYtc29mdC5ydTAeFw0xOTA0MTYxNjQ5MjVaFw0yMDA0MTUxNjQ5"
"MjVaMDsxCzAJBgNVBAYTAlJVMRAwDgYDVQQKDAdJVnlTb2Z0MRowGAYDVQQDDBFDb21tb24gTmV3cyBX"
"cml0ZTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBANE8wEDcI0J+k6BNyrVCt6cIszixTFLz"
"dY19DK/qILIMNK8Kiw3syYZN7YyG8QjfeTrLutcnTJN96r3ZXJ8h+Nwa/mlrrhl1GTqDF/tEMrs53E1X"
"F/kSmq7KQ7D5ubEvTwHj6MQLEhQX7STR06GS/SzBX2MwZlvN5QXV5kGxQ+grXiefVHWGSFUNwwiz9XZ+"
"APlqbEelRIqvPQIYCJbWdwxohIT5fA6fwydlsbWo8gGlL767N1l70Tu+R7apQDv9tG/0bY+oRWZpbZmj"
"9KBckkGAdluH9PH2WmmgmQDBmT0ikrO1W0WDgG9jcHoIHGGtYJtaWKnvAdSRKjmoJjXTPcLtPRNlNAbl"
"lyvRExB8gdiTOAMfWL8WlNGXBz5hUcOvh0p3u92aWpTvayz7tysMLZM2yeIRdNCjWyK7DyaRBxaLmKUu"
"4gSBgYAI8xAP/DgeCIq7wpkR2Eimg+2/iR97OUbDyO9yCqk2FE1C6S0XB+EE4ZenE2FPd/GSowh9qkW9"
"B0+8V6uLoLs1sNjxTWpyzN63A2kJmxzBZqU3zvMBFVSOHq+4codYffgW5R1iB6RUCyTOgTndkBOj8Ct0"
"Yu4+eD00X234Ogvf6w6DDPBJ1RWIwrUKK6/ORG8xd4zkcGxXNbofR1TUGczDj9sE93aYd22Ln7Yt7saE"
"2IQw6NuoSZqVAgMBAAGjYDBeMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMBEGCWCGSAGG"
"+EIBAQQEAwICBDAoBglghkgBhvhCAQ0EGxYZZXhhbXBsZSBjb21tZW50IGV4dGVuc2lvbjANBgkqhkiG"
"9w0BAQsFAAOCAgEAUl400oxUao0fyimMbHe66O3DNSfwFTt+vRb0yS32jndrywOwnUz+gAIy+Zprds3a"
"WL8hDUOOkJLxV8ZYsO35AK8YTek9fixRthh0xMlTkNU1gGQZtDOIYwoKDLi8NaL/ADBto1M+okHWQN5W"
"wGSB2bmAAnJ4d4VnJ5zdUYENPzORME+hFr26UKSII1d2dxcVD94nwC66ORgTImOpOSk7VWt1y4uJoZ10"
"q/YMXNbs3q3ERejiarGZgYeiz5fhn+Ui4ZB813Y8fZfg/34BSvqXsL3k5nXCqlWKHBNuQ0+wwPIx8ksf"
"7MNC5/9saPaonaJJWhT0cx8oI0a1FOzppRQasol2030Gs03h/PJxe4t6RB0whZO6rKWlTXfpL/7PGVxF"
"m4Cq7kHwmTwLn+OHSwS3QHUhj3cLc/Gd1W9luo+8URL0MntbQvl34Fo+WLX1dphCEQF1Zk8HI86HpPcK"
"yh/3L0UHvkGfO0gDoA4uPa/+xE6Uk+bd9IOUF5gvyzrTFOjyL3PhqzK9CRBB51ACIgtQbLXwgY8/M1dU"
"geeKtZYduTRU1ZuJOSgjFPW5uii16cfj85eN1b8lUFvZUDWZc1+NaMSD/gkTqScPgVXNIjZibuBC3NBl"
"aUkawzu1fm5N0HqjkpwEjaMV6y1SLQooubYZpKueQmxYeXyaM5AKuPwwiZo=";
char vds::cert_control::common_news_admin_certificate_[1821] =
"MIIFUDCCAzigAwIBAgIBATANBgkqhkiG9w0BAQsFADA6MQswCQYDVQQGEwJSVTEQMA4GA1UECgwHSVZ5"
"U29mdDEZMBcGA1UEAwwQdmFkaW1AaXYtc29mdC5ydTAeFw0xOTA0MTYxNjQ5MjVaFw0yMDA0MTUxNjQ5"
"MjVaMDsxCzAJBgNVBAYTAlJVMRAwDgYDVQQKDAdJVnlTb2Z0MRowGAYDVQQDDBFDb21tb24gTmV3cyBB"
"ZG1pbjCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAJ1VY4mIzE55G2bDem4c6LENxcP+ghDj"
"3nkhYce916UyfDdKtRsMYB1xgNwLBNZEitclQxjwsUpSqbnqz0tUb4D9IWOKCM8B90hGilrH/psdwSSS"
"ndtacZfiKjlJO2RP+47uYvrtuskqGZsMQ1wzYYPB5dUDExiI1Ewf3qVIl8lSkzkJP/nK8qErptRT8ygy"
"Q2UE08hOFxdL49DVL9u9B2UN54f0pd/uEZjVK7zzgCo8V/rAVtMN8UBpLnimZC0itn5/A8dM9A2R5hgO"
"1Y8jk49f2aNWSlrPXGS/5XPbzZUIuUBiuWo5Hzhzvv3C+gCIoiDQYZU/ToQf+krcasp/hLDDdPQm8TW0"
"CqAkJNO5s/Wf9scM2+Z/pXq3/Ud05ThBEZnRdjO2SG+VFkSWh+jpeVxfRni1CWopUU00iexfT3Ff+Stg"
"tFOJgUb7LX4OCKy+y+SjreNnekmZRbgC0dXGf58cfNXZBfSJQDL01vTNVkzlJSVBCL68ygOnF/GwU6NK"
"cdxta9eYmBMeurZdhhH0DylxbU13fKitleBPTfWtxA/AOJEw/hLBwdoVHh94dEuFMKkLBM6NSAn4TUsW"
"OXyOpzS6pz2uyFLq13WqnM2MV84WGhRA2VniR1mh4rYavBYjUlagKep9u43tlecI41C16KuJg+NRBxDP"
"mupE37i02UORAgMBAAGjYDBeMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMBEGCWCGSAGG"
"+EIBAQQEAwICBDAoBglghkgBhvhCAQ0EGxYZZXhhbXBsZSBjb21tZW50IGV4dGVuc2lvbjANBgkqhkiG"
"9w0BAQsFAAOCAgEA6i40N+EVNlV6UrE7RgZY95OsMgh8EUJ3F/l3REDdBhCDLFnuV8SDmbkQB0fSJFTN"
"TbsGCF/vPt/vI86hEQnn4L2JjdZ/Vi1dfhXftam1jEj5IDPVQGNNP/D06pVXVd/6VS0KwjkYjZeJlm6x"
"6tIoIO5DI2l8PaRp1J4dSHZSLPVw4TuoDWg7oRvz9+6gOZH56E3eiMvin/lDl0CcbsUrFnGB+gyTRG/Q"
"ztSKlbosJOreW6u8+DlAMUSLa0jeN7JPf49BAST9a8itBPh7i3Mdv10uBPsBY/IeIHUZ/obyjqMLaxm9"
"Wb4NSS2tzZq5dvMAl/EK1J0mPiAHr8rsW+guEojbXrxkiFV0MvX0ApSYfDboO010zxljmbNWQFMgwUOI"
"DDp9HnvxpvnMqYSn1r96D/9i6GUxpH5k+h4J5rvYGGQIh+kiSboLfNSMIC9RHmD1xH757OSMIEOP9VmM"
"OWngXfOj9JuBGLBbUkeS8QqIvp9k43S7wO6JUTZVXWzJC0LBsse3jxxnw9A+yvLVssZjdoc2eXhv7sLO"
"IOyJ9cEuYnp9IRmmSpd4F+qfgn6HXfxlpYsDzESjHyHMSWFZG9ZzNA/hFM/r4AMx4bfYfqb9SyukKngM"
"2t7YfwZ93bt+xv0EFiRtpfXpI9H7bVn4HUsjHdUqyMpjJuF2tKd3I7HQBGI=";
char vds::cert_control::autoupdate_channel_id_[65] =
"g5SwkJLQ2RxEJ+ThEcuQ99wCfkDKeliRw+W2vq6JbtM=";
char vds::cert_control::autoupdate_read_certificate_[1821] =
"MIIFTjCCAzagAwIBAgIBATANBgkqhkiG9w0BAQsFADA6MQswCQYDVQQGEwJSVTEQMA4GA1UECgwHSVZ5"
"U29mdDEZMBcGA1UEAwwQdmFkaW1AaXYtc29mdC5ydTAeFw0xOTA0MTYxNjQ5MjZaFw0yMDA0MTUxNjQ5"
"MjZaMDkxCzAJBgNVBAYTAlJVMRAwDgYDVQQKDAdJVnlTb2Z0MRgwFgYDVQQDDA9BdXRvVXBkYXRlIFJl"
"YWQwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDPzL45+EXeKLCkVOlWrg07G1jjwe+UL7Kq"
"BiupcEmQGIieDj9Pqvv++NPfZtE1I4Tj/K+S7ZVavJ4TEoujHBp2bQxBxSqM/mEiHyiwT5YOYScEcMsN"
"aRoH7ials+Xtv2IbgrSIPvgZjX1rxeqxWqiSuf+/N1jpH7qHJ2pswyYrtTfhxVaWgjWG8uR6Ytz3lBLu"
"Dbl4673U12V+wqLr5MBiieTt7YqXcZq86Fh7lmdP5rdR6tGq36bfIwEGutCxZVZa3MFs+sYYXNS4EgYn"
"ptDotZbRZEA7MpDRsQhRBIBIhcxA9DaffjvpXQhkydPxLql1rXGCBVsyExIf0vAc/vyw7V5KZwrHoV00"
"dSpv6dMVqgK4R5qUukphyifJdS+j1vResuwlvyVu7/tnNeSLH6FSrU7dxvWsNABEGBVY6eymPYm0itOj"
"es+4TcCEv/T1kgp7gZL+0eN0CWhI7ywV6+R3Y0vjtdwQLjEcybhXjh+2kLMfeuDd5CDP+A3o6Oc/3zC5"
"cSJIw8KQaqb9Z68bqces/x27DeQDLGqG8TnPIKZyVuqJEz0kKElDYsKc1L/Yhal0vEE52oVGjyaJzIfv"
"p/G3/BstPoSs8BHOKr5x2ADVSSZhHsdm8TbXt5dy8rysorICGbnv+8Is7275I2nw6W5olHwl5Ln8bSTd"
"lpKcShgThQIDAQABo2AwXjAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjARBglghkgBhvhC"
"AQEEBAMCAgQwKAYJYIZIAYb4QgENBBsWGWV4YW1wbGUgY29tbWVudCBleHRlbnNpb24wDQYJKoZIhvcN"
"AQELBQADggIBAEK8V+Lgy2qFiK+s3UFc1bG0ozwuoyFJyGPtqikW7A81T+qpNBkDp4V4LSFqsI9bwhXH"
"N9FawGv+Zd8tguRWsn1vMkEpVeC9Lcjxde3obEgjpcLURH/nj1j1x+Qg8FS5UvLSOY5UemC+IKn6lkjZ"
"PTpC581haSN//XUnzLfp8YpwyvnC77S61RHb8Bj39OM2dlySS7mdOgm0VIfJwlqy1QfcL5pIZf1IrT9i"
"KeKp96Is5ThzPsr+clr6jW1VIK6DIbdi0+ggg0JU6V8zvS5xcuYbQQ+FScpKfUy2mxpdTpC+WZMz7afD"
"7JRmDT9yUHMW3R9WPIV3IC5U24gJ0athLVbl9GgjgtmYv7NkqEG5s0qEcIkc8OGHIL+UEfBlrDC7aXRa"
"oocUJqScqdghqd7Dh8Gn+vWryrzt2VJ241abV+yUhnlDu7K6Esm6wQIlcr9lnNXHLwdRBNzBDm0NXhvg"
"38vbFAOoj3C4EwFU7UtnZLvQldoH7oXlGTUjPtmdAGyHUfgd+YF0ymGhAfwd6i/TZ88yUSRDGungSw1u"
"xMCW705XHf/PE//yQfKukFutzcEwVZbbWH3LhM4O2LhfOSuYuaAbJqLEtmVOFm5robnhzelctXoH52Hs"
"+v8QPG4j3C2EegbJ7lA9XpuP+U5NAbSKh1wneoZas88r82wiXMJJAqtj";
char vds::cert_control::autoupdate_read_private_key_[3137] =
"MIIJKAIBAAKCAgEAz8y+OfhF3iiwpFTpVq4NOxtY48HvlC+yqgYrqXBJkBiIng4/T6r7/vjT32bRNSOE"
"4/yvku2VWryeExKLoxwadm0MQcUqjP5hIh8osE+WDmEnBHDLDWkaB+4mpbPl7b9iG4K0iD74GY19a8Xq"
"sVqokrn/vzdY6R+6hydqbMMmK7U34cVWloI1hvLkemLc95QS7g25eOu91NdlfsKi6+TAYonk7e2Kl3Ga"
"vOhYe5ZnT+a3UerRqt+m3yMBBrrQsWVWWtzBbPrGGFzUuBIGJ6bQ6LWW0WRAOzKQ0bEIUQSASIXMQPQ2"
"n3476V0IZMnT8S6pda1xggVbMhMSH9LwHP78sO1eSmcKx6FdNHUqb+nTFaoCuEealLpKYconyXUvo9b0"
"XrLsJb8lbu/7ZzXkix+hUq1O3cb1rDQARBgVWOnspj2JtIrTo3rPuE3AhL/09ZIKe4GS/tHjdAloSO8s"
"Fevkd2NL47XcEC4xHMm4V44ftpCzH3rg3eQgz/gN6OjnP98wuXEiSMPCkGqm/WevG6nHrP8duw3kAyxq"
"hvE5zyCmclbqiRM9JChJQ2LCnNS/2IWpdLxBOdqFRo8micyH76fxt/wbLT6ErPARziq+cdgA1UkmYR7H"
"ZvE217eXcvK8rKKyAhm57/vCLO9u+SNp8OluaJR8JeS5/G0k3ZaSnEoYE4UCAwEAAQKCAgEAjA6nuFLK"
"ZK5wQJKqoy205T3Nb9VrMSnk9gwqqY1xR5oBmuZnbb8FEhmMVGrsXzCNhUzu2c0geYPf12MMkueCPofJ"
"VxsZTua1eVYfCpbZwN9ieO+9LFDGpsmxasYSF2iDK5+xJpOqjS58doNzaA5+yEZtReh8GMS16Bp89Mmj"
"lJoUDCwB7HfetBJKROMVpBk9mQ3PEN1zmV2Enyd4wB3yPXhLwMH2Q5Tigqjn2oTJJWWP8bqfjtgnlQX2"
"zx5jQu3Wgm+AP3/WvNz00wvy8g7Rh8e8220CjePLEEqOHG04OalUvgLcPivLHcMCwUv3efvFY/d/Je+O"
"Q/XupVx7Uk/a5/5oURSejseP+EuF2l7Yv9rwrpRrSZMKZDXTZCGxxs7EYAyPT031zQScYrVRAA9K/OPy"
"UQm6U0aR7oSEZbNnNPdK8FdxJtCiWeGp/bAYPbqBQ14a7jG3VKqp5D/VTInepKRMFHn19+r1PeH/YSvI"
"RE6wPcqEkwkd3WMfSl2Fv8bL5AsSshxIv94EqNP/KlupcKkqIbKzILBehY/GZVDqexfWP7BNKvbDs+U0"
"ge6oiYSOlfBt5kiihzNmZ0wf9w2DAATV4k8gkSNuzW9w3Vs0itntr1NPjwXgNwl00Iy0mzB/+MMJBeN8"
"FLmeSrkd58gmyJK14YBINbxG65ce2yYQRZECggEBAOimT5+r6ECHongoGAAsSdPqdjV4x93Yfu1aFPtH"
"MyJ/3HY1W60SEvw37PhLKHpiCwYaVyMFiQllC7x0fRTBetLPcLUNxk2R27mFHduseC6p0T5iyNEPRYQ1"
"Fj9X1MxHedG1vye+m7LcjRkpohpbEk48ML8B1WZJIT2uySEvdTTkQ0Q/B68Kld0qWcWGNRiwczvbH2Xh"
"TJe5/cZahZxbfIOd61Xij4xQs385UbaU+ICa+4AkLqsNN7VIUQyeIWSe5nfWU1VvAA0R8wFY/yw4e14p"
"Id3mOhFlAMess51p41xFvhTovcMgKBjQvkAN5rsvfResHl/Ztcr8OnULVSGmBOsCggEBAOSn8MgpL7Ek"
"8lYKB2WuUJQvVrJPP7EYMu6n9AMWr4Z3b8Fvb4ORnWeM0WstR3lwQztGHY4+R0dqKRcD/uiLKiCdbbYY"
"9XAjcVC5+t/MPw8MBDCDbteOTAryJ8IQgKW0CsnkQxL7EKd8SmEssx2ddp6/1mZcpeNl6dYvqWhYmTED"
"BwXtB7v78qGs6TjpvSuZwx/zAdyDZo8hZfa2dQiYIijJgDy8CtahIH5YFTN7D5s02ULEhMi4nwJnfZAL"
"6U7VR0hg6BGi/e5ttgi+F3jjC4xPd3zJ4w3dH74TiUl4ex8uMyvSgx+zYY6S5FpNo3LldLeKtrGVniqO"
"9rysDggt7U8CggEAAJ8JEWUVHq7+CRIaVk3H+K/klun2pqoAVMPr0Gv1P/9VaF9mGkU1FcVUdalFt2Xx"
"n5eMagSGxCan7F3nQ5nsqQlyxJj/0Y81Jf6sAL0qKP29GEyNOrmuttapc4vZfp4mPiAdHY8NvWGHYuzQ"
"iP97Qgg5HRl1J2vEkfSYhuUoi/acE1+Ttqzxj4Cgcr2UALff5uYD5HLAkJsniVMOjkdUQsm2KimLtpU0"
"lX9ir3kgXL+NMl9mXICRiINj7AO0FR+zf9hrqou8VUyZ+IPzUnvoIG09sOj/eLJrWR0l8aKpv8JT6pxg"
"fVflo4NTLrqaxh8vV1PXVOww5xTbVxqrpIZb9wKCAQAnn8bFGQYPv6RTLqe7giqqk02F1t/ls5jX7LkH"
"c/304mu2bLY5aZmKYUfFN/KD4+VytyLWDIrToF0AhQu+hqdFQaLKhKa7yRiQ8bm84Kso019CfPRPXHRn"
"DTHAmpWAoaOg+vJ4rpNjQtGs508e2bO9rObdlD6XGokcOeQ0le3uJWUpLLtDY1TXmZxM5YyHqry6o6T1"
"7rtuIE6II3RCigKZaNnVLI0ARqnX2zHJWxEIR29C98U+92duxjpnJPlIVQNmUozEyacRk2eROkfdBhNx"
"PDArqtyzAVfH26DV35AOhjYN6QwaCT7lsyTpVTz24zaHu/0O5yuimmW9ql9AIZ1XAoIBAGkM9Q+eRyKD"
"X1HvYAOujy49aIgrDtqFoCodvwPldw0AErI4bI1wgYH92ytGsY1JHnszR15795NNF9uaobkUfNtKE4Y9"
"BuBuE6279VcLm0ItRacn6x6AWQWu7Qs/+yiYQ99pVpqDPJaUsd7yWYfTiG2IkCHTLAElK65rpZVN7ztz"
"PHLYW3fXBTkiOb0qG36xxaBrrzr133pstgN93qi8RkTHNwUcXVT68eydfc36dZ7zstl/A94QVoCuph+n"
"T6Lh0I7RgD9Hc3lsQusUyx0AhSjXH0y30WyiF626TOr40KTcq0ipRC9I3NHYdAHBf2VP4DcP7a1ojZxj"
"FLDi3Z7BmM0=";
char vds::cert_control::autoupdate_write_certificate_[1821] =
"MIIFTzCCAzegAwIBAgIBATANBgkqhkiG9w0BAQsFADA6MQswCQYDVQQGEwJSVTEQMA4GA1UECgwHSVZ5"
"U29mdDEZMBcGA1UEAwwQdmFkaW1AaXYtc29mdC5ydTAeFw0xOTA0MTYxNjQ5MjZaFw0yMDA0MTUxNjQ5"
"MjZaMDoxCzAJBgNVBAYTAlJVMRAwDgYDVQQKDAdJVnlTb2Z0MRkwFwYDVQQDDBBBdXRvVXBkYXRlIFdy"
"aXRlMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAu0Gk9u6+jGXrnYRd+SzU82jkuTqZvOF2"
"BppPUk9XuxQXeD9E0yuXKA1meJa66fvBIcdPSzRzC4bQfZsnqidyYkDUQIMJFnQD43OHHjtKhkChpdis"
"OpVQIZ1VCxNsZvLGdIY0gDfpR/KJDxrD8qRlwqvbwzTRnJYwhWdOvET2TDv7J89d2XE0WWpBdIeaNiXD"
"lVQ/8FxS2k9MhL10XOCQun28GZ81OQ5QBqsRiyWwi4tNDauXR6r+5BNJEPEIlQ8y6yJ5YkrqH6VD94kZ"
"d/V+e6OFWXyU6JFRW0mi26JOij6mAdYBo4OtDOeiygI5lCeYNSCE0bv2Dmw1PhmZA9JSRlY2ZU+SSbbL"
"23VkJ2aexZoeiaoT5ucaWeoXpZjRYixH5m+s0yhCv6gCJ4l5PDMH5138jg429M03nw/Pfr/QjoqUUMbv"
"hEs+Dn3RipR8s/a4/ajDrpWE215qW9bIuq4IfUovBoDC5tJvXIok5XBTCSN6uGhVMhXzfCwc2X8YAzka"
"o0JZmKLtLUO7sERNqwQ2cEDIqVcK9h+AtevlYfgknldNpHeikJ3DTLCKbV5zTPFuB2OBJwRDLEm6Z0Wy"
"kd3Y0ML4xqPCigstm8QhpKUB3ld4PYITRy4EEPIdVG0iPCIgmBIOoo+gAc1uUfXGboVFGl78sF+ylF86"
"gcgdv8l834kCAwEAAaNgMF4wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwEQYJYIZIAYb4"
"QgEBBAQDAgIEMCgGCWCGSAGG+EIBDQQbFhlleGFtcGxlIGNvbW1lbnQgZXh0ZW5zaW9uMA0GCSqGSIb3"
"DQEBCwUAA4ICAQCm9UCBJjziAOBSFqAmggUOuh0yAgXib+x8D59r5PGcawtu5H32GqZFIOvWg/HmT+wE"
"EODfS2jmq39J1GEj04mNhKSAaDGZGr4TwvUMwcLkD4TlyJqgLp227D08tuzYwgcP5HgPyLPJtOoba54D"
"/pFu+nc1N5DGSY7sTcwphWLOS5072KJcRlFYHFQcTCU3wLqeKnkj/JO64OlNQFLoDs+SX8DQ29V0yDzi"
"MSro5HARe1dXPwaT9s6Eg8UHB0Vkjoms+PtYMBchBcysYgeWqyxXMXkAZRNMxhj6aPpEeXTTUDEuI4hO"
"cT5bPkZPj9BOi3YF5BNUo5Pp2/0tA1ZjlH6R31qFKFHkC41paQ2HB7369gdCJPMBUIOXHw9SIYCCdhb4"
"fUFM0U2GJQkM2Rte+4dk6ebIOs/kGE67OtDphMfAcZxxr87NmLWfBO50yP5oE9MxNJ9pHxPRv8bcgO44"
"cTtlsKOFB7a8K6KtM8whz/j+BcnzB3nyPn3OKWbGZcLewOowz7efGtUPEv4beOQnn1cvn6TBZC1P0meE"
"ZxwjtI5KAluODe54kOpoxqFFw+j8slHumebIBMI5nCknorkiycKHUX9s8mTiwyf/9u9xygNe2bJLOZou"
"9QlWjX9+zbS+GjAt9arTSu66srPbUwjKB+117Pdzq2tfUZd4Ron6koEnog==";
char vds::cert_control::autoupdate_admin_certificate_[1821] =
"MIIFTzCCAzegAwIBAgIBATANBgkqhkiG9w0BAQsFADA6MQswCQYDVQQGEwJSVTEQMA4GA1UECgwHSVZ5"
"U29mdDEZMBcGA1UEAwwQdmFkaW1AaXYtc29mdC5ydTAeFw0xOTA0MTYxNjQ5MjZaFw0yMDA0MTUxNjQ5"
"MjZaMDoxCzAJBgNVBAYTAlJVMRAwDgYDVQQKDAdJVnlTb2Z0MRkwFwYDVQQDDBBBdXRvVXBkYXRlIEFk"
"bWluMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAvMoTsdfotBuC4nBhjH8/K4Dp13SPTdcT"
"iQN7xg5/kAPnyWcQz70N4sBllrWRF5El++BwDYzRuNuH+airmbr36kNj8ZfIdT13gMKMB8H+0g+WllzM"
"6RODyIQoOHONfCDpOxwQ03/NFapLS9nrZcS6X4VZcFqJox+8IyXf/aWnNjYissktUiQH238J0ezXiteE"
"BoEYyOpsTdKPU+kdR3P0URXiEXkUAjYHpJiMIx2dxfvVBB5EbHo0knC1dmwZcu0Oh5c/Lc2+TT1ra6lF"
"Xy4Lo7nQPjrmEATF8VtkESX+AVA4uf0YJz7MM5f24cAobPd125C+YeN35tJUePR15rapdcpIfz1HOLT3"
"eFVb8oDsenDOgD4FqR7Z1yFee9xOrE4R/155CzJWbxYhAT6kQbsB+M8Eo2ews3HHqFe7mXG9whb9N2QA"
"ORGZGFGpuh8nEOmEiE6Q18oS64vDnNvctgDMA8hHNfPWgz3iL9H8WL8pu60tZncYvoiQmiG0VHckpHMN"
"o89orjXMqDtoWWws/Pa4MAyaNUOprLcJb6XAX09a9IbA1rqM4v2NnG6S1+KU+iXNt+HVenyund0mYa5p"
"A3c6J9Ef3FXbAE5Y1gxfP8gXFD0d7+S1EI09oUgu/yae74mY2bNyMFVkG3HgRoVDwG6wihY/kNMHf39Z"
"AkJgddXPZykCAwEAAaNgMF4wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwEQYJYIZIAYb4"
"QgEBBAQDAgIEMCgGCWCGSAGG+EIBDQQbFhlleGFtcGxlIGNvbW1lbnQgZXh0ZW5zaW9uMA0GCSqGSIb3"
"DQEBCwUAA4ICAQCfBil/IBOD2gYYcOxCutmtRNnIq6AHFXj94DTgRobAl/dh5UKa86yrX6eJtRMIc0e7"
"/M+nRuxawM1Mc4L+rC0VwVYw5zQC5THpt38EvCaZu1i1JiWUdpcLlmHI+gOpNbX3kDKDwDXzkQeJNwBs"
"IAKapJFqhxwinS/7c4GIIGxuYXXug3+41AwZbeNsIIrcLpl2y5HPICXKO98ulk0BrOhEX9b705MzbI3t"
"DtQP0OaPT/p5xsDIj94Q78ndG03m/M90DV1YNh3HmwouxR8Xe17OU1uKTO+v6cSMWHRudHCN9hfxQDpE"
"TB7Qry1+RnWSdxmXPoqYGkP2V2e0Vc3o6ZNK+RoC0ik0/DsQMxlQil0LUS3DV7i9ko2eNy7D131hEOnE"
"75VHhAxLoMIjDgL9LE2mfdJTbsdlgUPP0lQ6Ib3jVbBgrpw1Yr9VqaWSYAjY4P1CfB48sG6O6v4t4kYS"
"d3QLBDoVQdkqKVgQ9ya/6TB7lO9+IO+9mftAoB85j2lkPj9mMr3hPEM8w5hkga4wrjlLL5yEt+/7aQXJ"
"jLR3ZWtvNSUyXREaNYBLyaT0qQ6I/qMOOV1ciH4LY3yOp9fnAmsc+csrLHaxiRGlSzVXmi3zX+9JBHCe"
"15dtynHYLMQhE4jxvSWQtpEchPozTMGFRB2FNR7CKBmr7LF+Ts/ecPNotg==";
char vds::cert_control::web_channel_id_[65] =
"HAGm9dNipLvUIN4VqBBf8uqfRP3dibBh8HltxJkhj58=";
char vds::cert_control::web_read_certificate_[1821] =
"MIIFRzCCAy+gAwIBAgIBATANBgkqhkiG9w0BAQsFADA6MQswCQYDVQQGEwJSVTEQMA4GA1UECgwHSVZ5"
"U29mdDEZMBcGA1UEAwwQdmFkaW1AaXYtc29mdC5ydTAeFw0xOTA0MTYxNjQ5MjhaFw0yMDA0MTUxNjQ5"
"MjhaMDIxCzAJBgNVBAYTAlJVMRAwDgYDVQQKDAdJVnlTb2Z0MREwDwYDVQQDDAhXZWIgUmVhZDCCAiIw"
"DQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAO2DA9kbX66SsjMkFhhB7bmoHoTWxI3tUNtp5j34k4Tc"
"/DXij8vb6K2z8xdlTtxZ5iMVXYJaqIsn9CIiBLnlEJtON/t8dAH6PQyq+zWJhicOkVIFkKj+up/2Tj8M"
"Q5kM/L9PKjOd/o1GmBmbBawMYOdKL753IGlm27r8Qyan3rqBUnWk2cWhJydQkYbq68G6htPPGq68Q36Y"
"M1XjViOZWVGnuxarrLArGnHouTzbH1indb0+IH/GX5fFZD9E98JjaPf+QqBqhz+PY4yqZtrMsSpMJU/j"
"WPQKjNJSfQBdMGNGn6k1ET9XyAbOA+TWyarBpdVO39Rwlrmc/2n5v/mY525RHEMNdadSVwKcVf2Z9BA9"
"UZGcwU6vMd/hdJCqEaZ1VOaCbXqqNOIS/a+UPgTMzL+wLJ4xJ0SqLHgleLnROY3B5Ufy0u93SRBcdRSY"
"mDocbRp60/KAy9WLGgA77ImBycULWeck+m9MJ2QLBY/57pnXtDVpePD8ufqYUh6qn2Zc1W352bzN/a2B"
"NC4VGZlWAZENVJLP5ooAiiPqxXe6lF7swjxrJ4Ka4+sNhVBQtkvB8gCEND1WWQH5CahKyWuV+9dDikE9"
"Uu710lZm47628MUXg6P4o+UH7KYs1FSYIhdgfLsMJsUWF3u45LhewMuWRXqNb1l9HweC4OjEcXLI1Ltf"
"AgMBAAGjYDBeMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMBEGCWCGSAGG+EIBAQQEAwIC"
"BDAoBglghkgBhvhCAQ0EGxYZZXhhbXBsZSBjb21tZW50IGV4dGVuc2lvbjANBgkqhkiG9w0BAQsFAAOC"
"AgEAc5PYEJoeuTtUkdigO8VbaBoFm2AXo9CEjyU6BKpt7PtH6llCFg3+IxDybmuAV55E6Hljk7OcLFaE"
"R/+THs5jPtQgE85/5L99bayjA77vLoYC3IuZBhSRbPPlyqlAHMk22qhArVqpY+4X4KVBRVA0bXZhRVOJ"
"SObTJgk1e8jwR+uJ2aaIVMXayyJCEoXW/Eo46nBscm4gv6DkGTG4kcfg+/t2/jgz995VyZHzbR/+xRhr"
"Sltf7xVmnStAeeezaEFJwGuWsBVGqsuklDH0aJvlLKL+F0GsmUENrv+8x9dW7irJDdFMFoAq1rYZRORU"
"ipjMuIlKXxb24PcK48oK7INOSxGIXaeaICe2pQaWTxDO0MT2gmYv+W6JWapehdYul0GFI+j6Vpwb7YUB"
"7Z3y3G7vqquLlp6t2IfH4AzMzicHiZWHul6Wlp95hTbzlbJ/lEYszOQ0HS7UZbmgahzQG2Mo2y7WrfL0"
"wLejcwya0F+137KcQx+Ekh1W66WtdDKODOgi6Wndv97oWMEejeC7ojPFty0P/HE5STDbz1PuCp5kI8+r"
"HmA72DPNNNVRJyjQ7dXuFl/YY6lsgz6+gYT5mkg4EGt+JiVR4QLBLsewMy7RUesjfMDwlB8nZlx/9QDg"
"kbNHPC9hg368bp6rKlcWq/9kkI6crqq2m+WeCcpAwemzuoo=";
char vds::cert_control::web_read_private_key_[3137] =
"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"
"6pHyRHJR/nzcYg==";
char vds::cert_control::web_write_certificate_[1821] =
"MIIFSDCCAzCgAwIBAgIBATANBgkqhkiG9w0BAQsFADA6MQswCQYDVQQGEwJSVTEQMA4GA1UECgwHSVZ5"
"U29mdDEZMBcGA1UEAwwQdmFkaW1AaXYtc29mdC5ydTAeFw0xOTA0MTYxNjQ5MjhaFw0yMDA0MTUxNjQ5"
"MjhaMDMxCzAJBgNVBAYTAlJVMRAwDgYDVQQKDAdJVnlTb2Z0MRIwEAYDVQQDDAlXZWIgV3JpdGUwggIi"
"MA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDDmo8L7jEuuu1jEInwFpPquM+AaDnzYpcvu4uPGI2/"
"JeCtScYM3diW8oMJnC78wTI5IOkmLdo38gIZwSjeXkUMpWSkbhEGy5daSXzzx0c7Y7P/EAaamlA7hpNJ"
"9m0lpgUhOiRs9en2nv/9VsAuCsiQ7/qyM+KQb/feCgkrB59ARE2bR7vrLEMOnhPUOEfEoFtGNEZb/SJs"
"/QJ2Yns6ec07QsUEnfRNOqZKCcyyhz5ipK+OcybQ2R8JOTaQlKrGg1EfT1Oku9Q/usZ7KgOKJwAQFvRE"
"pUl5+H7BhRFpOltyR4frrRajbcJlpIxxJZOKuZB8hr/oOmCZhOiKxqILA/elFhNb9onWcSirfOkAR9kF"
"ZU7ylx+OFJtbFam8NhKaLbuWjoeWwMViTMK726FvXweGWWvjkj0OsrcPqqnW00vrGezzETKGp9FIhmTq"
"8k/C1DELJXzps9f3bNs14I1WqaIMvWCE1+BpeKUsoNNskXPwz+iUKRZXxCHaDhu3C7oS8QU0/v12/nTS"
"MrvUga13Mkr91rlgnT0T1M7pOr8RF+dce9KA7f89KrcvNDS0T0bdo5fPH1ZYlPDkAKREfS19Dzi2VZhl"
"Pb9ipk2mUQD4syQBftIeyBZPHycK7yD9pBl79hpFxAV32Ghq/kioJz5jqgTQ2r1omtvd6Of5i0+9ay3O"
"UwIDAQABo2AwXjAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjARBglghkgBhvhCAQEEBAMC"
"AgQwKAYJYIZIAYb4QgENBBsWGWV4YW1wbGUgY29tbWVudCBleHRlbnNpb24wDQYJKoZIhvcNAQELBQAD"
"ggIBAMsK4rtOFkgfr2IH8Y4azz7UmavQneneFHemh6l8bhnIH8sNyDj01QZHFQDXvR9G4iinielyimmV"
"PKNmkBrTDNosQGL2oogtjEAPUs/382rQRRhYkzP1jQj55Rw+cajncF7cFwoz6rdFHv+UXWG7JebQxOFA"
"Scktfl1om+X8ruRIsWBFR178/rNwEGfalURuMWLkdIq5mn5BMZJSa/VrcS9e178Qiwg56RzNdGLebC5y"
"i9jp+JkLFnyzzXEAZkCto9iXaAStcN7kSINww87jpUCOQzjt0k/Byp3wwsIs9QB3JF66RRi1Oy0EUHk9"
"TkaKLCgk/P6lnyjC2BPgdifPriWcZLfMBAtYgj0n9G+Ef3Rylw/+PsKtZz2mgIcheqxMtw1clGJgn+be"
"qW8N5whP99Hn8JZBiOWCOq6Slkby6vtK5oKualx6KCL0SXYKSJQeSHukmCY4Imh1HXjChWnQMKNsh/5b"
"lGP0V9M8WjP9GsxC9MGneV3QcjlCt5J0oeGwRHEsUkcC7be6fy2TGBa7HRQZtcQZFhk6qSePuvBcFnA1"
"fy1sWlq8yMeQOH4sO4dhVsWC8iWS3C+pCXoI6L0oS67P2dFoO3XQhVWz9/O9KIpt52X7zqjH7Q2WbwPm"
"Bxhnttu4QgmAuNBSkKmqVp7557QMj6byAQ3gxsba9j40mHEa";
char vds::cert_control::web_admin_certificate_[1821] =
"MIIFSDCCAzCgAwIBAgIBATANBgkqhkiG9w0BAQsFADA6MQswCQYDVQQGEwJSVTEQMA4GA1UECgwHSVZ5"
"U29mdDEZMBcGA1UEAwwQdmFkaW1AaXYtc29mdC5ydTAeFw0xOTA0MTYxNjQ5MjhaFw0yMDA0MTUxNjQ5"
"MjhaMDMxCzAJBgNVBAYTAlJVMRAwDgYDVQQKDAdJVnlTb2Z0MRIwEAYDVQQDDAlXZWIgQWRtaW4wggIi"
"MA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDJyTb8c6XdBV10+im1l+6tsIcyy4XYyKeLptf0avHQ"
"THpDRQLAkcfEHvnjMgm2F3ySCnNMi6C3qmQW0GLEO1q65QBkZ+P0dBETyHO0QISm+7/LyakGp4noGKpo"
"Pnkj1DfCSur6Fns7iDbFZSro+eExH4JbJ92GymO7cZ3aD/peAvNus+WLE+SqgWR6cvuvjqqB5l7E9xB2"
"q2XEn5Mmu5tVCXygyv2KNdXoCDQzgnpV/Pw7AMRxJaktZpUbPzBPOHFBgHhUvq8+OKkrd681ZYAXf27B"
"qzN9hShePsWGZkzCDY4IzqvMhh0wzOGycY/zmA0HfX7bQV0aT6br/JYWgQd0KDZJrrMGOYiAJE+uFUtr"
"BHhdixTgdQRvsJkWc+NWNM9y4DBk+XRSX3KL52N8OaQdECirlPwfOTpyBgCS1uwb1meM3WpA46RehD4c"
"C3/t0NOxevuUK468L410U/sWoB0fqAI/htKMd0KqMq9LFeAjGmF/DXL6uS8DDMNu1VmpigkNcbvI8eJJ"
"L3+B1L2TU5CzB69xoUb+qulf3pZc+zB7dCFZmzKwgaKmSL1/kdu2wt3ouzbwqDwWRopPVw63HoWSrN29"
"eV+7VHG9jun/pTye7iLDCYeNVPFkfzb4NAl4XQsVpboxqTW3xsSRGUtow7PEnpoWPf0ZseQgmUWFjeBq"
"aQIDAQABo2AwXjAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjARBglghkgBhvhCAQEEBAMC"
"AgQwKAYJYIZIAYb4QgENBBsWGWV4YW1wbGUgY29tbWVudCBleHRlbnNpb24wDQYJKoZIhvcNAQELBQAD"
"ggIBAGcac9kCEup+o2clfFoco6kU07CnvzL72A5/uqtSzIdZlSl/WOGmOcM+5PDePJl38Z0BBKNoklsp"
"WQhNOexhCZgzG86cI91ORBi84pU7PGNXl3TwVMHRjsJhJoUfV/jP9Oc33ZlsgH90of9bMcweFg20+LvY"
"YlHESA/hfMtXKer5TOZK9RBcLvnkWDobUAEDRZwSX0xkpeoxdJef1EWtgREyCrfjtLPQ7E4vnSv+Yuvx"
"fg6guiJEHr5hdC+hpdJpws59A23J7xySUZNW6MX4iqD/PiMNf8WeiOVjdo2yORYP6gHZpg2rnud9yyKz"
"JUUwmdk8AOE/pcN+B+w93gwWOCBggMxiI58AjsoDt3r3ijSO8bwS8O6cu0B3HWzEc9X49Z1yNAlc2Jc9"
"doFOgFMsIT7o8h2/NixdJZM6v4hjw+kzW5tOk97Fe77JbNmYo/mV+WxMPnjgJOKjlmnpYC6Fy2zkJZFz"
"DK+uFULdbRBiz3yAAVB/KkmNWJC154M8W61yMm3VXF2LLksWc5Gv/sFSc+7yR5blFAbvpPfkHYhzfKHZ"
"L90kir4L4/usJbLcOG6MHG7uAh37jxHSWNTfN2n9fw5XtaVSy9LiZSzFyzoPL/Fk/OGuOkLUU50gfg/c"
"q/DPbzVSTg08auNzO8waNMtzLM9IlUwnXzFmcGYMVJLbxf6n";
char vds::cert_control::common_storage_certificate_[1821] =
"MIIFTTCCAzWgAwIBAgIBATANBgkqhkiG9w0BAQsFADA6MQswCQYDVQQGEwJSVTEQMA4GA1UECgwHSVZ5"
"U29mdDEZMBcGA1UEAwwQdmFkaW1AaXYtc29mdC5ydTAeFw0xOTA0MTYxNjQ5MzRaFw0yMDA0MTUxNjQ5"
"MzRaMDgxCzAJBgNVBAYTAlJVMRAwDgYDVQQKDAdJVnlTb2Z0MRcwFQYDVQQDDA5Db21tb24gU3RvcmFn"
"ZTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAMzQXqsnaKcn22t8a0umzr6TeKxzNU1PEKkS"
"NHb+dqbcAPQNSxa/E6FRzaxvjyHcBjFEak5L2KLs2Gu8+BsVjfCh+BoWK99FuSSBVACnYvY6BAdrJJX8"
"gSvZigTHoWnwl9IOzCdR9vrLhowpKz1N3ejh1X/arZkpkgyrgsmmIx8bP7waBzmQpzFuNJ1xMG8+34oy"
"rlbv5/EDsD8zDyQG0i2qJ5/yEzEoT+4fuQtEQUZml5GanPF7OGpKlB4jeHu2WLk2Af03OvIA1ulWiLsg"
"ia2sLkel9pPhIY5Pe5PzaNSrMFLukOtAQahJMfV/Fho2pXAdXwV8BDBRDTvqM7GTmhX71zy8MGTNl4p2"
"teVcisW45b7bwIGPJz6qSzye9Qov2ZlaD6FlPmCecWWEeDQqB7OfAuNHgDnZC16ybOIAV9V+A4oP0StC"
"m381l0ZbDPOS8XdSrPR2rKaJKHQLDkFFmlEW9Oyea0W/bzk28cSNnCPMg3cFo6ObdOgiVVJ59qdE/3LF"
"kF93IWK3HPVdHUsMGjW6Pl5G0OXGqCJKo1gTToVu2MSVc4D1sjmUAZo6i7kmlpjBnCBFvK2iZayUSr37"
"3ConqNyOvMozbhuVHu8DsTLtnAv9hw7CUD4MRcgChZgG6qO4CrcWoGo8Vk387FpogQHROBn4Zl10jXbD"
"iSXTiELbAgMBAAGjYDBeMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMBEGCWCGSAGG+EIB"
"AQQEAwICBDAoBglghkgBhvhCAQ0EGxYZZXhhbXBsZSBjb21tZW50IGV4dGVuc2lvbjANBgkqhkiG9w0B"
"AQsFAAOCAgEAk5oEqKWPS1AC8BvpPuUHQx+g7L1f8+Ekcck8kpK68SYHKMe5FoAKoJg0ZrJYmUc0s0dD"
"9GRNHXgVMZoaAAMjLePbh/0KtJ97/ZakFGcA55rXt0Ejq40jj8lE5njy0i1M1dSv+Tv1bMhQu63dWnzD"
"bf3CJNOrl8uRaffagr9PKmyr1x/cxxYEBcrBFyV8I6PJN+u2vkqIEPJDhl3e7woy/jNpfpftoxbVwDtj"
"3puihxuEzCQcrpbHptNFGMkeZnEWXawIferxvDZLGFHbqW+rj0O7YGbAWs1y1BsLueXpMCBl7/5Fah7p"
"55geX2/OCWwEZo5Hcmk+k0W84qSdQYfhnYOGAqpGX40FtF3saYqygsCuu7VHGGqF/bHdLE+7IIPF5wq0"
"FkZG5Cyy1OkMkuRLs1tAaRycqm2AvYDZznclvbtJ8r9pjwXARh/m7LoOWgMalBKTvynZ/C3aHEaN0a7v"
"9PmBEj/rJzY/SLoB/HcVJRCmv0Jd8DSyxxBbMaFy8vqlUfQp3uj4rXhn/6nrvVc9RfF1zWWztSSfHcc9"
"yKDa0IurPagmImbukjib+snqOgVGnjSSicCYjTZUphD0+Mh9AvpzpBAQeJiaujWpy/7S8WW7zS4I8pEl"
"qKMkulR6le8aMhzF+wt4zqPzJ3O9nRps8POr69pzsB4EM5BFbrsFYXk=";
char vds::cert_control::common_storage_private_key_[3137] =
"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"
"WBcXXdGRjNo=";

/*
 * User: user_id -> certificate (object_id, user_id, parent_id)
 *
 *
 */

//static vds::crypto_service::certificate_extension_type id_extension_type()
//{
//  static vds::crypto_service::certificate_extension_type result = vds::crypto_service::register_certificate_extension_type(
//      "1.2.3.4",
//      "VDS Identifier",
//      "VDS Identifier");
//
//  return result;
//}
//
//static vds::crypto_service::certificate_extension_type parent_id_extension_type()
//{
//  static vds::crypto_service::certificate_extension_type result = vds::crypto_service::register_certificate_extension_type(
//      "1.2.3.5",
//      "VDS Parent Identifier",
//      "VDS Parent Identifier");
//
//  return result;
//}
//
//static vds::crypto_service::certificate_extension_type user_id_extension_type()
//{
//  static vds::crypto_service::certificate_extension_type result = vds::crypto_service::register_certificate_extension_type(
//      "1.2.3.6",
//      "VDS User Identifier",
//      "VDS User Identifier");
//
//  return result;
//}
//
//static vds::crypto_service::certificate_extension_type parent_user_id_extension_type()
//{
//	static vds::crypto_service::certificate_extension_type result = vds::crypto_service::register_certificate_extension_type(
//		"1.2.3.7",
//		"Parent VDS User Identifier",
//		"Parent VDS User Identifier");
//
//	return result;
//}
//
//static vds::guid certificate_parent_id(const vds::certificate & cert)
//{
//  return vds::guid::parse(cert.get_extension(cert.extension_by_NID(parent_id_extension_type())).value);
//}
vds::expected<vds::certificate> vds::_cert_control::create_root(
    const std::string &name,
    const vds::asymmetric_private_key &private_key) {

  certificate::create_options local_user_options;
  local_user_options.country = "RU";
  local_user_options.organization = "IVySoft";
  local_user_options.name = name;

  //local_user_options.extensions.push_back(
  //    certificate_extension(id_extension_type(), guid::new_guid().str()));

  //local_user_options.extensions.push_back(
  //    certificate_extension(user_id_extension_type(), user_id.str()));

  GET_EXPECTED(cert_pkey, asymmetric_public_key::create(private_key));
  return certificate::create_new(cert_pkey, private_key, local_user_options);
}

vds::expected<vds::certificate> vds::_cert_control::create_user_cert(
  const std::string & name,
  const vds::asymmetric_private_key & private_key,
  const certificate & user_cert,
  const asymmetric_private_key & user_private_key) {
  certificate::create_options local_user_options;
  local_user_options.country = "RU";
  local_user_options.organization = "IVySoft";
  local_user_options.name = name;
  local_user_options.ca_certificate = &user_cert;
  local_user_options.ca_certificate_private_key = &user_private_key;

  //local_user_options.extensions.push_back(
  //    certificate_extension(id_extension_type(), object_id.str()));

  //local_user_options.extensions.push_back(
  //    certificate_extension(user_id_extension_type(), user_id.str()));

  //local_user_options.extensions.push_back(
  //    certificate_extension(parent_id_extension_type(), cert_control::get_id(user_cert).str()));

  //local_user_options.extensions.push_back(
	 // certificate_extension(parent_user_id_extension_type(), cert_control::get_user_id(user_cert).str()));

  GET_EXPECTED(cert_pkey, asymmetric_public_key::create(private_key));
  return certificate::create_new(cert_pkey, private_key, local_user_options);
}

vds::expected<vds::certificate> vds::_cert_control::create_cert(
	const std::string & name,
	const vds::asymmetric_private_key & private_key,
	const certificate & user_cert,
	const asymmetric_private_key & user_private_key) {
	certificate::create_options local_user_options;
	local_user_options.country = "RU";
	local_user_options.organization = "IVySoft";
	local_user_options.name = name;
	local_user_options.ca_certificate = &user_cert;
	local_user_options.ca_certificate_private_key = &user_private_key;

	//local_user_options.extensions.push_back(
	//	certificate_extension(id_extension_type(), object_id.str()));

	//local_user_options.extensions.push_back(
	//	certificate_extension(parent_id_extension_type(), cert_control::get_id(user_cert).str()));

	//local_user_options.extensions.push_back(
	//	certificate_extension(parent_user_id_extension_type(), cert_control::get_user_id(user_cert).str()));

  GET_EXPECTED(cert_pkey, asymmetric_public_key::create(private_key));
	return certificate::create_new(cert_pkey, private_key, local_user_options);
}

//vds::guid vds::cert_control::get_id(const vds::certificate &cert) {
//  return vds::guid::parse(cert.get_extension(cert.extension_by_NID(id_extension_type())).value);
//}
//
//vds::guid vds::cert_control::get_user_id(const vds::certificate &cert) {
//  return vds::guid::parse(cert.get_extension(cert.extension_by_NID(user_id_extension_type())).value);
//}
//
//vds::guid vds::cert_control::get_parent_id(const vds::certificate &cert) {
//  auto parent = cert.get_extension(cert.extension_by_NID(parent_id_extension_type())).value;
//  if(parent.empty()){
//    return vds::guid();
//  }
//  else {
//    return vds::guid::parse(parent);
//  }
//}
//
//vds::guid vds::cert_control::get_parent_user_id(const vds::certificate &cert) {
//	auto parent = cert.get_extension(cert.extension_by_NID(parent_user_id_extension_type())).value;
//	if (parent.empty()) {
//		return vds::guid();
//	}
//	else {
//		return vds::guid::parse(parent);
//	}
//}
//

const std::string& vds::cert_control::auto_update_login() {
  static std::string auto_update_login_("auto_update_login");
  return auto_update_login_;
}

const std::string& vds::cert_control::auto_update_password() {
  static std::string auto_update_password_("auto_update_password");
  return auto_update_password_;
}

const std::string& vds::cert_control::web_login() {
  static std::string web_login_("web_login");
  return web_login_;
}

const std::string& vds::cert_control::web_password() {
  static std::string web_password_("web_password");
  return web_password_;
}

vds::expected<void> vds::cert_control::private_info_t::genereate_all() {
  GET_EXPECTED(key, asymmetric_private_key::generate(asymmetric_crypto::rsa4096()));
  this->root_private_key_ = std::make_shared<asymmetric_private_key>(std::move(key));

  GET_EXPECTED_VALUE(key, asymmetric_private_key::generate(asymmetric_crypto::rsa4096()));
  this->common_news_write_private_key_ = std::make_shared<asymmetric_private_key>(std::move(key));

  GET_EXPECTED_VALUE(key, asymmetric_private_key::generate(asymmetric_crypto::rsa4096()));
  this->common_news_admin_private_key_ = std::make_shared<asymmetric_private_key>(std::move(key));

  GET_EXPECTED_VALUE(key, asymmetric_private_key::generate(asymmetric_crypto::rsa4096()));
  this->autoupdate_write_private_key_ = std::make_shared<asymmetric_private_key>(std::move(key));

  GET_EXPECTED_VALUE(key, asymmetric_private_key::generate(asymmetric_crypto::rsa4096()));
  this->autoupdate_admin_private_key_ = std::make_shared<asymmetric_private_key>(std::move(key));

  GET_EXPECTED_VALUE(key, asymmetric_private_key::generate(asymmetric_crypto::rsa4096()));
  this->web_write_private_key_ = std::make_shared<asymmetric_private_key>(std::move(key));

  GET_EXPECTED_VALUE(key, asymmetric_private_key::generate(asymmetric_crypto::rsa4096()));
  this->web_admin_private_key_ = std::make_shared<asymmetric_private_key>(std::move(key));

  return expected<void>();
}

static void save_buffer(char(&buffer_storage)[65], const vds::const_data_buffer & data) {
  auto storage_str = vds::base64::from_bytes(data);
  vds_assert(sizeof(buffer_storage) > storage_str.length());
  strcpy(buffer_storage, storage_str.c_str());
}

static void save_certificate(char (&cert_storage)[1821], const vds::certificate & cert) {
  auto der = cert.der();
  if(der.has_error()) {
    throw std::runtime_error(der.error()->what());
  }

  auto cert_storage_str = vds::base64::from_bytes(der.value());
  vds_assert(sizeof(cert_storage) > cert_storage_str.length());
  strcpy(cert_storage, cert_storage_str.c_str());
}

static void save_private_key(char (&private_key_storage)[3137], const vds::asymmetric_private_key & private_key) {
  auto der = private_key.der(std::string());
  if (der.has_error()) {
    throw std::runtime_error(der.error()->what());
  }

  const auto private_key_str = vds::base64::from_bytes(der.value());
  vds_assert(sizeof(private_key_storage) > private_key_str.length());
  strcpy(private_key_storage, private_key_str.c_str());
}

vds::expected<void> vds::cert_control::genereate_all(
  const std::string& root_login,
  const std::string& root_password,
  const private_info_t & private_info) {

  GET_EXPECTED(root_user_cert, _cert_control::create_root(
    root_login,
    *private_info.root_private_key_));

  save_certificate(root_certificate_, root_user_cert);

  //
  GET_EXPECTED(common_news_read_private_key, asymmetric_private_key::generate(asymmetric_crypto::rsa4096()));
  save_private_key(common_news_read_private_key_, common_news_read_private_key);
  GET_EXPECTED(common_news_read_certificate, _cert_control::create_cert(
    "Common News Read",
    common_news_read_private_key,
    root_user_cert,
    *private_info.root_private_key_));
  save_certificate(common_news_read_certificate_, common_news_read_certificate);

  GET_EXPECTED(common_news_write_certificate, _cert_control::create_cert(
    "Common News Write",
    *private_info.common_news_write_private_key_,
    root_user_cert,
    *private_info.root_private_key_));
  save_certificate(common_news_write_certificate_, common_news_write_certificate);

  GET_EXPECTED(common_news_admin_certificate, _cert_control::create_cert(
    "Common News Admin",
    *private_info.common_news_admin_private_key_,
    root_user_cert,
    *private_info.root_private_key_));
  save_certificate(common_news_admin_certificate_, common_news_admin_certificate);
  GET_EXPECTED(common_news_channel_id, common_news_admin_certificate.fingerprint(hash::sha256()));
  save_buffer(common_news_channel_id_, common_news_channel_id);

  //Auto update
  GET_EXPECTED(autoupdate_read_private_key, asymmetric_private_key::generate(asymmetric_crypto::rsa4096()));
  save_private_key(autoupdate_read_private_key_, autoupdate_read_private_key);
  GET_EXPECTED(autoupdate_read_certificate, _cert_control::create_cert(
    "AutoUpdate Read",
    autoupdate_read_private_key,
    root_user_cert,
    *private_info.root_private_key_));
  save_certificate(autoupdate_read_certificate_, autoupdate_read_certificate);

  GET_EXPECTED(autoupdate_write_certificate, _cert_control::create_cert(
    "AutoUpdate Write",
    *private_info.autoupdate_write_private_key_,
    root_user_cert,
    *private_info.root_private_key_));
  save_certificate(autoupdate_write_certificate_, autoupdate_write_certificate);

  GET_EXPECTED(autoupdate_admin_certificate, _cert_control::create_cert(
    "AutoUpdate Admin",
    *private_info.autoupdate_admin_private_key_,
    root_user_cert,
    *private_info.root_private_key_));
  save_certificate(autoupdate_admin_certificate_, autoupdate_admin_certificate);

  GET_EXPECTED(autoupdate_channel_id, autoupdate_admin_certificate.fingerprint(hash::sha256()));
  save_buffer(autoupdate_channel_id_, autoupdate_channel_id);

  //Web
  GET_EXPECTED(web_read_private_key, asymmetric_private_key::generate(asymmetric_crypto::rsa4096()));
  save_private_key(web_read_private_key_, web_read_private_key);
  GET_EXPECTED(web_read_certificate, _cert_control::create_cert(
    "Web Read",
    web_read_private_key,
    root_user_cert,
    *private_info.root_private_key_));
  save_certificate(web_read_certificate_, web_read_certificate);

  GET_EXPECTED(web_write_certificate, _cert_control::create_cert(
    "Web Write",
    *private_info.web_write_private_key_,
    root_user_cert,
    *private_info.root_private_key_));
  save_certificate(web_write_certificate_, web_write_certificate);

  GET_EXPECTED(web_admin_certificate, _cert_control::create_cert(
    "Web Admin",
    *private_info.web_admin_private_key_,
    root_user_cert,
    *private_info.root_private_key_));
  save_certificate(web_admin_certificate_, web_admin_certificate);

  GET_EXPECTED(web_channel_id, web_admin_certificate.fingerprint(hash::sha256()));
  save_buffer(web_channel_id_, web_channel_id);
  //
  GET_EXPECTED(common_storage_private_key, asymmetric_private_key::generate(asymmetric_crypto::rsa4096()));
  save_private_key(common_storage_private_key_, common_storage_private_key);
  GET_EXPECTED(common_storage_certificate, _cert_control::create_cert(
    "Common Storage",
    common_storage_private_key,
    root_user_cert,
    *private_info.root_private_key_));
  save_certificate(common_storage_certificate_, common_storage_certificate);

  return expected<void>();
}
